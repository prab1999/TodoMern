{"version":3,"sources":["logo.svg","components/create-todo.component.js","components/edit-todo.component.js","components/todos-list.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CreateTodo","props","onChangeTodoDescription","bind","onChangeTodoResponsible","onChangeTodoPriority","onSubmit","state","todo_description","todo_responsible","todo_priority","todo_completed","e","this","setState","target","value","preventDefault","console","log","newTodo","axios","post","then","alert","style","marginTop","className","type","onChange","name","id","checked","Component","EditTodo","onChangeTodoCompleted","get","match","params","response","data","catch","error","obj","history","push","align","htmlFor","Todo","todo","to","_id","onClick","window","c","handleShow","color","TodosList","todos","showToggle","deleteid","handleClose","flag","componentDidMount","map","currentTodo","i","key","Modal","show","onHide","Header","Title","Body","Footer","Button","variant","backgroundColor","todoList","App","href","src","logo","width","height","alt","path","exact","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ca9b903e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateTodo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        }\r\n    }\r\n\r\n    onChangeTodoDescription(e) {\r\n        this.setState({\r\n            todo_description: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoResponsible(e) {\r\n        this.setState({\r\n            todo_responsible: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoPriority(e) {\r\n        this.setState({\r\n            todo_priority: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        console.log(`Form submitted:`);\r\n        console.log(`Todo Description: ${this.state.todo_description}`);\r\n        console.log(`Todo Responsible: ${this.state.todo_responsible}`);\r\n        console.log(`Todo Priority: ${this.state.todo_priority}`);\r\n\r\n        const newTodo = {\r\n            todo_description: this.state.todo_description,\r\n            todo_responsible: this.state.todo_responsible,\r\n            todo_priority: this.state.todo_priority,\r\n            todo_completed: this.state.todo_completed\r\n        };  \r\n\r\n        axios.post('http://localhost:4000/todos/add', newTodo)\r\n            .then(alert(\"Created Successfully!\"));\r\n        \r\n        this.setState({\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Create New Todo</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\"> \r\n                        <label>Description: </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.todo_description}\r\n                                onChange={this.onChangeTodoDescription}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Responsible: </label>\r\n                        <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.todo_responsible}\r\n                                onChange={this.onChangeTodoResponsible}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityLow\" \r\n                                    value=\"Low\"\r\n                                    checked={this.state.todo_priority==='Low'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Low</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityMedium\" \r\n                                    value=\"Medium\" \r\n                                    checked={this.state.todo_priority==='Medium'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Medium</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityHigh\" \r\n                                    value=\"High\" \r\n                                    checked={this.state.todo_priority==='High'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">High</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create Todo\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class EditTodo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n        this.onChangeTodoCompleted = this.onChangeTodoCompleted.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/todos/'+this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    todo_description: response.data.todo_description,\r\n                    todo_responsible: response.data.todo_responsible,\r\n                    todo_priority: response.data.todo_priority,\r\n                    todo_completed: response.data.todo_completed\r\n                })   \r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    onChangeTodoDescription(e) {\r\n        this.setState({\r\n            todo_description: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoResponsible(e) {\r\n        this.setState({\r\n            todo_responsible: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoPriority(e) {\r\n        this.setState({\r\n            todo_priority: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoCompleted(e) {\r\n        this.setState({\r\n            todo_completed: !this.state.todo_completed\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const obj = {\r\n            todo_description: this.state.todo_description,\r\n            todo_responsible: this.state.todo_responsible,\r\n            todo_priority: this.state.todo_priority,\r\n            todo_completed: this.state.todo_completed\r\n        };\r\n        console.log(obj);\r\n        axios.post('http://localhost:4000/todos/update/'+this.props.match.params.id, obj)\r\n            .then(alert(\"Updated Successfully!\"));\r\n        \r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 align=\"center\">Update Todo</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\"> \r\n                        <label>Description: </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.todo_description}\r\n                                onChange={this.onChangeTodoDescription}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Responsible: </label>\r\n                        <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.todo_responsible}\r\n                                onChange={this.onChangeTodoResponsible}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityLow\" \r\n                                    value=\"Low\"\r\n                                    checked={this.state.todo_priority==='Low'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Low</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityMedium\" \r\n                                    value=\"Medium\" \r\n                                    checked={this.state.todo_priority==='Medium'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Medium</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityHigh\" \r\n                                    value=\"High\" \r\n                                    checked={this.state.todo_priority==='High'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">High</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <input  className=\"form-check-input\"\r\n                                id=\"completedCheckbox\"\r\n                                type=\"checkbox\"\r\n                                name=\"completedCheckbox\"\r\n                                onChange={this.onChangeTodoCompleted}\r\n                                checked={this.state.todo_completed}\r\n                                value={this.state.todo_completed}\r\n                                />\r\n                        <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\r\n                            Completed\r\n                        </label>                        \r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Update Todo\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n//import { Button} from 'react-bootstrap/lib/Button';\r\n\r\n// const [show, setShow] = useState(false);\r\n\r\n// \r\n\r\n\r\nconst Todo = props => (\r\n    <tr>\r\n        <td className={props.todo.todo_completed ? 'completed' : ''}> {props.todo.todo_description}</td>\r\n        <td className={props.todo.todo_completed ? 'completed' : ''}>{props.todo.todo_responsible}</td>\r\n        <td className={props.todo.todo_completed ? 'completed' : ''}>{props.todo.todo_priority}</td>\r\n        <td>\r\n            <Link to={\"/edit/\"+props.todo._id}>Edit</Link>\r\n            \r\n            <Link to={\"/\"} onClick={()=>window.c.handleShow(props.todo._id)} style={{color:'red'}}> Delete</Link>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default class TodosList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        window.c=this;\r\n        this.state = {todos: [],showToggle:false,deleteid:''};\r\n        this.handleClose=this.handleClose.bind(this);\r\n        this.handleShow=this.handleShow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/todos/')\r\n            .then(response => {\r\n                this.setState({ todos: response.data });\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            })\r\n    }\r\n    handleClose(flag){\r\n        this.setState({showToggle : false});\r\n        if(flag){\r\n            axios.get('http://localhost:4000/todos/delete/'+this.state.deleteid)\r\n                .then(response => {\r\n                    alert(\"Deleted Successfully!\");\r\n                    this.componentDidMount();\r\n                })\r\n                .catch(function (error){\r\n                    console.log(error);\r\n                })\r\n        }\r\n    \r\n    }\r\n    handleShow(id){\r\n        this.setState({showToggle : true});\r\n        this.setState({deleteid : id});\r\n    }\r\n    todoList() {\r\n        var self=this;\r\n        return this.state.todos.map(function(currentTodo, i){\r\n            return <Todo todo={currentTodo}  key={i} />;\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n             <div>\r\n                 <Modal show={this.state.showToggle} onHide={()=>this.handleClose(this,false)} >\r\n                <Modal.Header >\r\n                    <Modal.Title>Confirm</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Do you want to delete?</Modal.Body>\r\n                    <Modal.Footer>\r\n                         <Button variant=\"secondary\" onClick={() => this.handleClose(false)} >\r\n                            No!\r\n                        </Button>\r\n                        <Button variant=\"primary\" style={{backgroundColor:'red'}} onClick={() => this.handleClose(true)}>\r\n                            Yeah!\r\n                        </Button>\r\n                    </Modal.Footer>\r\n            </Modal>\r\n                <h3>Todos List</h3>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20 }} >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Responsible</th>\r\n                            <th>Priority</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.todoList() }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport CreateTodo from \"./components/create-todo.component\";\nimport EditTodo from \"./components/edit-todo.component\";\nimport TodosList from \"./components/todos-list.component\";\n\nimport logo from \"./logo.svg\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"https://codingthesmartway.com\" target=\"_blank\">\n              <img src={logo} width=\"30\" height=\"30\" alt=\"CodingTheSmartWay.com\" />\n            </a>\n            <Link to=\"/\" className=\"navbar-brand\">MERN-Stack Todo App</Link>\n            <div className=\"collpase navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"nav-link\">Todos</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/create\" className=\"nav-link\">Create Todo</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <br/>\n          <Route path=\"/\" exact component={TodosList} />\n          <Route path=\"/edit/:id\" component={EditTodo} />\n          <Route path=\"/create\" component={CreateTodo} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}